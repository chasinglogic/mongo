Import("env")
Import("get_option")

from os.path import join

if not get_option("install-mode") == "hygienic":
    Return()

env = env.Clone()

env.AutoInstall(
    target="$PREFIX_BINDIR",
    source=[env.File("resmoke.py")],
    AIB_COMPONENT="resmoke",
    AIB_ROLE="runtime",
    AIB_COMPONENTS_EXTRA=[
        "tests",
        "unittests",
    ]
)

# We put this in bin because resmoke.py uses it's path to import this
# stuff so it has to be adjacent to resmoke.py. Resmoke does not
# behave properly as a python module and even if it did putting this
# somewhere like "lib" and making python actually able to import it
# would be needlessly complicated and not something that scons could
# easily do.
for pyfile in env.Glob("resmokelib/**/*.py"):

    # The last path element is the path of the dir relative to this
    # SConscript.  i.e. resmokelib/some/directory
    normalized_dir_path = str(pyfile.dir.get_path_elements()[-1])

    env.AutoInstall(
        target=join("$PREFIX_BINDIR", normalized_dir_path),
        source=pyfile,
        AIB_COMPONENT="resmoke",
        AIB_ROLE="runtime",
        AIB_COMPONENTS_EXTRA=[
            "tests",
            "unittests",
        ]
    )

resmoke_config_file = env.Substfile(
    target='#/testconfig.ini',
    source='testconfig.ini.in',
    SUBST_DICT={
        '@conf_dir@': env.Dir('$PREFIX_CONFDIR/resmokeconfig'),
        '@benchmark_test_list@': env.File('$PREFIX_CONFDIR/resmokeconfig/benchmarks.txt'),
        '@unittest_test_list@': env.File('$PREFIX_CONFDIR/resmokeconfig/unittests.txt'),
        '@libfuzzer_test_list@': env.File('$PREFIX_CONFDIR/resmokeconfig/libfuzzer_tests.txt'),
        '@integration_test_list@': env.File('$PREFIX_CONFDIR/resmokeconfig/integration_tests.txt'),
    },
)

env.AlwaysBuild(resmoke_config_file)

env.AutoInstall(
    target="$PREFIX_BINDIR",
    source=resmoke_config_file,
    AIB_COMPONENT='resmoke',
    AIB_COMPONENTS_EXTRA=[
        'unittests',
        'jstests',
        'benchmarks',
        'fuzzertests',
    ],
    AIB_ROLE='runtime',
)

templated_configs = [
    'resmokeconfig/suites/integration_tests_replset.yml.in',
    'resmokeconfig/suites/integration_tests_sharded.yml.in',
    'resmokeconfig/suites/integration_tests_standalone.yml.in',
    'resmokeconfig/suites/integration_tests_standalone_audit.yml.in',
    'resmokeconfig/suites/libfuzzer.yml.in',
    'resmokeconfig/suites/unittests.yml.in',
    'resmokeconfig/suites/unittests_auth.yml.in',
    'resmokeconfig/suites/unittests_client.yml.in',
    'resmokeconfig/suites/unittests_query.yml.in',
    'resmokeconfig/suites/unittests_repl.yml.in',
    'resmokeconfig/suites/unittests_sharding.yml.in',
]

for templated_config in templated_configs:
    rendered_config = env.Substfile(
        target='$BUILD_DIR/' + templated_config.replace('.in', ''),
        source=templated_config,
        # TODO: this isn't really self-testable because the full path is encoded
        # to these text files. Not really sure how to un-hardcode this mess yet.
        SUBST_DICT={
            'unittests_txt': env.subst('$prefix_confdir/resmokeconfig/unittests.txt'),
            'integration_tests_txt': env.subst('$prefix_confdir/resmokeconfig/integration_tests.txt'),
            'fuzzer_tests_txt': env.subst('$prefix_confdir/resmokeconfig/fuzzer_tests.txt'),
        }
    )

    env.AutoInstall(
        target='$PREFIX_CONFDIR' + templated_config.replace('.in', ''),
        source=rendered_config,
        AIB_COMPONENT='resmoke',
        AIB_COMPONENTS_EXTRA=[
            "tests",
            "unittests",
        ],
        AIB_ROLE='runtime',
    )

for ymlfile in env.Glob("resmokeconfig/**/*.yml"):
    normalized_dir_path = str(ymlfile.dir.get_path_elements()[-1])

    if normalized_dir_path in templated_configs or normalized_dir_path + '.in' in templated_configs:
        continue

    env.AutoInstall(
        target=join("$PREFIX_CONFDIR", normalized_dir_path),
        source=ymlfile,
        AIB_COMPONENT="resmoke",
        AIB_ROLE="runtime",
        AIB_COMPONENTS_EXTRA=[
            "tests",
            "unittests",
        ]
    )
